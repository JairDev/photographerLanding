---
import Layout from "../../layouts/Layout.astro";
import { useSanityClient } from "@sanity/astro";
import { PortableText } from "astro-portabletext";
import { Image } from "astro:assets";
import "../../styles/global.css";
const client = useSanityClient();

type Slug = {
  slug?: string;
};

export async function getStaticPaths() {
  const client = useSanityClient();
  const projects = await client.fetch(`*[_type == "projects"]{
      "slug": slug.current
  }`);
  return projects.map((project) => ({
    params: {
      slug: project.slug,
    },
  }));
}

const { slug } = Astro.params;

async function getProjects(slug) {
  return await client.fetch(
    `*[_type == "projects" && slug.current == $slug][0]{
  "slug": slug.current,
  title,
  "image": image.asset->url,
  "alt": image.alt,
  date,
  description,
  service,
  client,
  gallerys->{
    'images': image[]{
      "url": asset->url,
      alt
    }
  }
}`,
    { slug }
  );
}

const projects = await client.fetch(`*[_type == "projects"]{
      "slug": slug.current
  }`);
function indexSearch() {
  const currentProject = projects.findIndex((project) => project.slug === slug);
  if (currentProject === projects.length - 1) {
    return projects[0];
  }
  const nextProject = projects.filter((project, i) => i === currentProject + 1);
  const singleObject = {};
  nextProject.forEach((element) => {
    Object.assign(singleObject, element);
  });
  return singleObject;
}
const slugNext: Slug = indexSearch();
const projectsContent = await getProjects(slug);
const nextProjectToShow = await getProjects(slugNext.slug);
const smallImage = `${projectsContent?.image}?w=400&h=600`;
const mediumImage = `${projectsContent?.image}?w=800&h=900`;
const largeImage = `${projectsContent?.image}?w=768&h=1024`;
console.log(nextProjectToShow.slug);
---

<Layout title={slug}>
  <main class="main">
    <section class="hero">
      <div class="grid">
        <div class="image-wrapper">
          <picture>
            <source srcset={largeImage} media="(min-width: 1200px)" />
            <source srcset={mediumImage} media="(min-width: 768px)" />
            <img
              src={smallImage}
              decoding="async"
              loading="lazy"
              alt={projectsContent.alt}
              width="400"
              height="600"
            />
          </picture>
        </div>
        <div class="title">
          <h1 class="dancing-in-black">{projectsContent?.title}</h1>
        </div>
      </div>

      <div class="content">
        <div class="grid">
          <h2 class="text-wrapper">ACERCA DE</h2>
          <div class="massa-vitae-tortor">
            <PortableText value={projectsContent.description} />
          </div>
        </div>
        <div class="grid">
          <h2 class="text-wrapper">DETALLES</h2>
          <div class="table">
            <div class="row">
              <div class="div">AÑO</div>
              <div class="text-wrapper-2">{projectsContent.date}</div>
            </div>
            <div class="line"></div>
            <div class="row">
              <div class="div">SERVICIO</div>
              <div class="text-wrapper-2">{projectsContent.service}</div>
            </div>
            <div class="line"></div>
            <div class="row">
              <div class="div">CLIENTE</div>
              <div class="text-wrapper-2">{projectsContent.client}</div>
            </div>
          </div>
        </div>
      </div>

      <div class="projects">
        {
          projectsContent?.gallerys?.images?.map((project, i) => (
            <div class={`project grid-${i + 1}`}>
              <div class="project-image-wrapper">
                <picture>
                  <source srcset={project.url} media="(min-width: 1200px)" />
                  <source
                    srcset={`${project.url}?w=400&h=600`}
                    media="(min-width: 800px)"
                  />

                  <img
                    src={`${project.url}?w=400&h=600`}
                    decoding="async"
                    loading="lazy"
                    alt={project.alt}
                  />
                </picture>
              </div>
            </div>
          ))
        }
      </div>
    </section>

    <div class="next-project">
      <div class="title">
        <h3 class="text-wrapper">PRÓXIMO PROYECTO</h3>
        <h2 class="fashion-week">{nextProjectToShow.title}</h2>
      </div>
      <div class="grid">
        <div class="image-wrapper">
          <img src={nextProjectToShow.image} />
        </div>
        <div class="cta-button">
          <div class="overlap-group">
            <a href={`/projects/${nextProjectToShow.slug}`} class="circle"
              >DESCUBRIR</a
            >
            <div class="border"></div>
          </div>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  // @ts-nocheck
  import { handleMouseMoveAnimation } from "../../utils/handleMouseMoveAnimation";
  const animateButtonProject = document.querySelector(".cta-button");
  const button = document.querySelector(".cta-button .circle");
  const border = document.querySelector(".cta-button .border");
  animateButtonProject.addEventListener("mousemove", function (e) {
    e.preventDefault();
    handleMouseMoveAnimation(animateButtonProject, button, border, e);
  });
  animateButtonProject.addEventListener("mouseleave", function (e) {
    e.preventDefault();

    gsap.to(button, {
      x: 0,
      y: 0,
    });
    gsap.to(border, {
      x: 0,
      y: 0,
    });
  });
</script>

<style>
  .main {
    padding-top: 3rem;
  }
  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center 30%;
  }
  .hero {
    display: inline-flex;
    flex-direction: column;
    align-items: center;
    position: relative;
    width: 100%;
  }

  .hero .image-wrapper {
    max-width: 900px;
  }
  .hero .grid {
    position: relative;
    flex: 0 0 auto;
  }

  .hero .dancing-in-black {
    position: relative;
    margin-top: 2rem;
    font-family: "Clash Display-Regular", Helvetica;
    font-weight: 400;
    color: var(--textprimary);
    font-size: var(--heading-xlarge-font-size);
    text-align: center;
    letter-spacing: -6px;
    line-height: 100%;
  }

  /* content */
  .content {
    display: inline-flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 4rem;
    position: relative;
    margin-top: 5rem;
    width: 100%;
  }

  .content .grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
    position: relative;
    width: 100%;
  }

  .content .text-wrapper {
    position: relative;
    margin-top: -1px;
    font-family: var(--heading-uppercase-h3-font-family);
    font-weight: var(--heading-uppercase-h3-font-weight);
    color: var(--textdefault);
    font-size: var(--heading-uppercase-h3-font-size);
    letter-spacing: var(--heading-uppercase-h3-letter-spacing);
    line-height: var(--heading-uppercase-h3-line-height);
    font-style: var(--heading-uppercase-h3-font-style);
  }

  .content .massa-vitae-tortor {
    position: relative;
    /* width: 700px; */
    margin-top: -1px;
    font-family: var(--text-medium-font-family);
    font-weight: var(--text-medium-font-weight);
    color: var(--textdefault);
    font-size: var(--text-medium-font-size);
    letter-spacing: var(--text-medium-letter-spacing);
    line-height: var(--text-medium-line-height);
    font-style: var(--text-medium-font-style);
  }

  .content .table {
    flex-direction: column;
    align-items: flex-start;
    flex: 1;
    flex-grow: 1;
    display: flex;
    gap: 32px;
    position: relative;
  }

  .content .row {
    align-items: center;
    align-self: stretch;
    width: 100%;
    flex: 0 0 auto;
    display: flex;
    gap: 32px;
    position: relative;
  }

  .content .div {
    position: relative;
    flex: 1;
    font-family: var(--heading-h5-font-family);
    font-weight: var(--heading-h5-font-weight);
    color: var(--textprimary);
    font-size: var(--heading-h5-font-size);
    letter-spacing: var(--heading-h5-letter-spacing);
    line-height: var(--heading-h5-line-height);
    font-style: var(--heading-h5-font-style);
  }

  .content .text-wrapper-2 {
    position: relative;
    width: fit-content;
    margin-top: -1px;
    font-family: var(--text-medium-font-family);
    font-weight: var(--text-medium-font-weight);
    color: var(--textdefault);
    font-size: var(--text-medium-font-size);
    letter-spacing: var(--text-medium-letter-spacing);
    line-height: var(--text-medium-line-height);
    white-space: nowrap;
    font-style: var(--text-medium-font-style);
  }

  .content .line {
    position: relative;
    align-self: stretch;
    width: 100%;
    height: 1px;
    background-color: var(--borderdefault);
  }
  /* projects */

  .latest-work {
    margin-top: 14rem;
  }

  .latest-work .latest {
    position: relative;
    font-family: var(--heading-uppercase-large-font-family);
    font-weight: var(--heading-uppercase-large-font-weight);
    color: var(--textdefault);
    font-size: var(--heading-uppercase-large-font-size);
    letter-spacing: var(--heading-uppercase-large-letter-spacing);
    line-height: var(--heading-uppercase-large-line-height);
    white-space: nowrap;
    font-style: var(--heading-uppercase-large-font-style);
  }
  .latest-work .text-wrapper {
    /* border: 1px solid red; */
    position: relative;
    font-family: var(--heading-large-primary-font-family);
    font-weight: var(--heading-large-primary-font-weight);
    color: var(--textprimary);
    font-size: var(--heading-large-primary-font-size);
    letter-spacing: var(--heading-large-primary-letter-spacing);
    line-height: var(--heading-large-primary-line-height);
    white-space: nowrap;
    font-style: var(--heading-large-primary-font-style);
  }
  .latest-work .grid {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    justify-content: space-between;
  }
  .button-text {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }
  .button-text .arrow-right {
    font-family: var(--button-text-default-font-family);
    font-weight: var(--button-text-default-font-weight);
    color: var(--textdefault);
    font-size: var(--button-text-default-font-size);
    letter-spacing: var(--button-text-default-letter-spacing);
    line-height: var(--button-text-default-line-height);
    white-space: nowrap;
    font-style: var(--button-text-default-font-style);
  }

  .button-text .icon {
    position: relative;
    width: 31.21px;
    height: 14.71px;
  }
  .projects {
    display: grid;
    grid-template-areas: "item";
    gap: 2rem;
    margin-top: 14rem;
    width: 100%;
  }

  .projects .project-image-wrapper {
    height: 100%;
    width: 100%;
  }

  .projects .project-title {
    font-family: var(--heading-uppercase-h3-font-family);
    font-weight: var(--heading-uppercase-h3-font-weight);
    color: var(--textprimary);
    font-size: var(--heading-uppercase-h3-font-size);
    letter-spacing: var(--heading-uppercase-h3-letter-spacing);
    line-height: var(--heading-uppercase-h3-line-height);
    text-transform: uppercase;
    margin-bottom: 0.5rem;
  }

  .wrapper-project-info {
    font-family: var(--text-default-font-family);
    font-weight: var(--text-default-font-weight);
    color: var(--textdefault);
    font-size: var(--text-default-font-size);
    letter-spacing: var(--text-default-letter-spacing);
    line-height: var(--text-default-line-height);
    font-style: var(--text-default-font-style);
  }
  /* next project */
  .next-project {
    display: inline-flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    margin-top: 12rem;
    position: relative;
  }

  .next-project .title {
    display: inline-flex;
    flex-direction: column;
    align-items: center;
    gap: 20px;
    position: relative;
    flex: 0 0 auto;
    z-index: 1;
  }

  .next-project .text-wrapper {
    position: relative;
    width: fit-content;
    margin-top: -1px;
    font-family: var(--heading-uppercase-small-font-family);
    font-weight: var(--heading-uppercase-small-font-weight);
    color: var(--textdefault);
    font-size: clamp(32px, 5vw, 60px);
    letter-spacing: var(--heading-uppercase-small-letter-spacing);
    line-height: var(--heading-uppercase-small-line-height);
    white-space: nowrap;
    font-style: var(--heading-uppercase-small-font-style);
  }

  .next-project .fashion-week {
    position: relative;
    width: fit-content;
    font-family: var(--heading-xlarge-font-family);
    font-weight: var(--heading-xlarge-font-weight);
    color: var(--textprimary);
    font-size: var(--heading-xlarge-font-size);
    text-align: center;
    letter-spacing: var(--heading-xlarge-letter-spacing);
    line-height: var(--heading-xlarge-line-height);
    font-style: var(--heading-xlarge-font-style);
  }

  .next-project .grid {
    display: inline-flex;
    flex-direction: column;
    align-items: center;
    position: relative;
    flex: 0 0 auto;
    /* margin-top: -80px; */
    z-index: 0;
  }

  .next-project .image-wrapper {
    position: relative;
    height: 855.56px;
    background-size: cover;
    background-position: 50% 50%;
  }

  .next-project .cta-button {
    position: relative;
    width: 220px;
    height: 220px;
    margin-top: -120px;
  }

  .next-project .overlap-group {
    position: relative;
    width: 230px;
    height: 220px;
    left: -10px;
  }

  .next-project .circle {
    background-color: var(--backgroundprimary);
    border-radius: 500px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    font-family: var(--heading-uppercase-h4-font-family);
    font-weight: var(--heading-uppercase-h4-font-weight);
    color: var(--textinverse);
    font-size: var(--heading-uppercase-h4-font-size);
    letter-spacing: var(--heading-uppercase-h4-letter-spacing);
    line-height: var(--heading-uppercase-h4-line-height);
    font-style: var(--heading-uppercase-h4-font-style);
    position: absolute;
    top: 10px;
    left: 0;
    width: 200px;
    height: 200px;
    padding: 0px 20px;
    text-decoration: none;
    z-index: 10;
  }

  .next-project .get-in-touch {
    position: relative;
    align-self: stretch;
    font-family: var(--heading-uppercase-h4-font-family);
    font-weight: var(--heading-uppercase-h4-font-weight);
    color: var(--textinverse);
    font-size: var(--heading-uppercase-h4-font-size);
    text-align: center;
    letter-spacing: var(--heading-uppercase-h4-letter-spacing);
    line-height: var(--heading-uppercase-h4-line-height);
    font-style: var(--heading-uppercase-h4-font-style);
  }

  .next-project .border {
    position: absolute;
    width: 220px;
    height: 220px;
    top: 0;
    left: 10px;
    border-radius: 110px;
    border: 1px solid;
    border-color: var(--borderprimary);
  }

  @media screen and (min-width: 768px) {
    .projects {
      grid-gap: 6rem;
      grid-template-rows: 600px 800px 600px;
      grid-template-areas:
        "item1 item1 item2 "
        "item3 item3 item3 "
        "item4 item5 item5 ";
    }
    .project:nth-child(even) {
      padding: 3rem 0rem;
    }
    .project.grid-1 {
      grid-area: item1;
    }
    .project.grid-2 {
      grid-area: item2;
    }
    .project.grid-3 {
      grid-area: item3;
    }
    .project.grid-4 {
      grid-area: item4;
    }
    .project.grid-5 {
      grid-area: item5;
    }

    .next-project .grid {
      margin-top: -40px;
    }
  }

  @media screen and (min-width: 1200px) {
    .hero .dancing-in-black {
      margin-top: -80px;
    }

    .content {
      gap: 7rem;
    }

    .content .grid {
      grid-template-columns: 280px 1fr;
      gap: 5rem;
    }

    .projects {
      grid-template-rows: 700px 900px 700px;
    }
  }
</style>
